/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode insertIntoBST(TreeNode root, int val) {
        return traversal(root,val);     
    }

    public TreeNode traversal(TreeNode root, int val){
        TreeNode r = new TreeNode(val);
        if(root==null) return r;
        if(root!=null && root.val>val) traversal(root.left,val);
        if(root!=null && root.val<val) traversal(root.right,val);
        if(root.val>val && root.left==null){root.left = r;}
        else if(root.val<val && root.right==null) root.right = r; 
        //if(root.right==null) root.right = r;
        return root;

    }
}
