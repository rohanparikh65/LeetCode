class Solution {
    public int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount + 1]; // for amount i, at least need dp[i] coins
    Arrays.fill(dp, Integer.MAX_VALUE >> 4); // an impossible big value, and avoid int overflow
    dp[0] = 0;
        
    for(int i = 0; i <= amount; i++) {
        for(int coin : coins) {
            if(i - coin < 0) {
                continue;
            }
            dp[i] = Math.min(dp[i], 1 + dp[i - coin]);
        }
    }
        
    return (dp[amount] == Integer.MAX_VALUE >> 4) ? -1 : dp[amount];
    }
}
