/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode searchBST(TreeNode root, int val) {
        return traversal(root,val);

        
    }
    public TreeNode traversal(TreeNode root, int val){
        if(root==null) return null;
        if(root.val==val)return root;
        if(root.left== null && root.right==null) return null;
        if(root.left!=null && root.left.val==val) return root.left;
        if(root.right!=null && root.right.val == val) return root.right;
        
       TreeNode r = traversal(root.left,val);
       if(r!=null) return r;
       else return traversal(root.right,val);
       //return null;

    }
}
